<?php

/**
 * Copyright Â© 2012 - 2020 by Renaud Guillard (dev@nore.fr)
 * Distributed under the terms of the MIT License, see LICENSE
 *
 * This file is generated by tools/build-status-code-list.php
 *
 * @package Http
 */

namespace NoreSources\Http;

use NoreSources\Container;

/**
 * HTTP status codes.
 * From the Hypertext Transfer Protocol (HTTP) Status Code Registry
 * @see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
 */
class Status
{
	/**
	 * HTTP status code 100 Continue.
	 *
	 * [RFC7231, Section 6.2.1]
	 */
	const CONTINUE = 100;

	/**
	 * HTTP status code 101 Switching Protocols.
	 *
	 * [RFC7231, Section 6.2.2]
	 */
	const SWITCHING_PROTOCOLS = 101;

	/**
	 * HTTP status code 102 Processing.
	 *
	 * [RFC2518]
	 */
	const PROCESSING = 102;

	/**
	 * HTTP status code 103 Early Hints.
	 *
	 * [RFC8297]
	 */
	const EARLY_HINTS = 103;

	/**
	 * HTTP status code 200 OK.
	 *
	 * [RFC7231, Section 6.3.1]
	 */
	const OK = 200;

	/**
	 * HTTP status code 201 Created.
	 *
	 * [RFC7231, Section 6.3.2]
	 */
	const CREATED = 201;

	/**
	 * HTTP status code 202 Accepted.
	 *
	 * [RFC7231, Section 6.3.3]
	 */
	const ACCEPTED = 202;

	/**
	 * HTTP status code 203 Non-Authoritative Information.
	 *
	 * [RFC7231, Section 6.3.4]
	 */
	const NON_AUTHORITATIVE_INFORMATION = 203;

	/**
	 * HTTP status code 204 No Content.
	 *
	 * [RFC7231, Section 6.3.5]
	 */
	const NO_CONTENT = 204;

	/**
	 * HTTP status code 205 Reset Content.
	 *
	 * [RFC7231, Section 6.3.6]
	 */
	const RESET_CONTENT = 205;

	/**
	 * HTTP status code 206 Partial Content.
	 *
	 * [RFC7233, Section 4.1]
	 */
	const PARTIAL_CONTENT = 206;

	/**
	 * HTTP status code 207 Multi-Status.
	 *
	 * [RFC4918]
	 */
	const MULTI_STATUS = 207;

	/**
	 * HTTP status code 208 Already Reported.
	 *
	 * [RFC5842]
	 */
	const ALREADY_REPORTED = 208;

	/**
	 * HTTP status code 226 IM Used.
	 *
	 * [RFC3229]
	 */
	const IM_USED = 226;

	/**
	 * HTTP status code 300 Multiple Choices.
	 *
	 * [RFC7231, Section 6.4.1]
	 */
	const MULTIPLE_CHOICES = 300;

	/**
	 * HTTP status code 301 Moved Permanently.
	 *
	 * [RFC7231, Section 6.4.2]
	 */
	const MOVED_PERMANENTLY = 301;

	/**
	 * HTTP status code 302 Found.
	 *
	 * [RFC7231, Section 6.4.3]
	 */
	const FOUND = 302;

	/**
	 * HTTP status code 303 See Other.
	 *
	 * [RFC7231, Section 6.4.4]
	 */
	const SEE_OTHER = 303;

	/**
	 * HTTP status code 304 Not Modified.
	 *
	 * [RFC7232, Section 4.1]
	 */
	const NOT_MODIFIED = 304;

	/**
	 * HTTP status code 305 Use Proxy.
	 *
	 * [RFC7231, Section 6.4.5]
	 */
	const USE_PROXY = 305;

	/**
	 * HTTP status code 306 (Unused).
	 *
	 * [RFC7231, Section 6.4.6]
	 */
	const _UNUSED_ = 306;

	/**
	 * HTTP status code 307 Temporary Redirect.
	 *
	 * [RFC7231, Section 6.4.7]
	 */
	const TEMPORARY_REDIRECT = 307;

	/**
	 * HTTP status code 308 Permanent Redirect.
	 *
	 * [RFC7538]
	 */
	const PERMANENT_REDIRECT = 308;

	/**
	 * HTTP status code 400 Bad Request.
	 *
	 * [RFC7231, Section 6.5.1]
	 */
	const BAD_REQUEST = 400;

	/**
	 * HTTP status code 401 Unauthorized.
	 *
	 * [RFC7235, Section 3.1]
	 */
	const UNAUTHORIZED = 401;

	/**
	 * HTTP status code 402 Payment Required.
	 *
	 * [RFC7231, Section 6.5.2]
	 */
	const PAYMENT_REQUIRED = 402;

	/**
	 * HTTP status code 403 Forbidden.
	 *
	 * [RFC7231, Section 6.5.3]
	 */
	const FORBIDDEN = 403;

	/**
	 * HTTP status code 404 Not Found.
	 *
	 * [RFC7231, Section 6.5.4]
	 */
	const NOT_FOUND = 404;

	/**
	 * HTTP status code 405 Method Not Allowed.
	 *
	 * [RFC7231, Section 6.5.5]
	 */
	const METHOD_NOT_ALLOWED = 405;

	/**
	 * HTTP status code 406 Not Acceptable.
	 *
	 * [RFC7231, Section 6.5.6]
	 */
	const NOT_ACCEPTABLE = 406;

	/**
	 * HTTP status code 407 Proxy Authentication Required.
	 *
	 * [RFC7235, Section 3.2]
	 */
	const PROXY_AUTHENTICATION_REQUIRED = 407;

	/**
	 * HTTP status code 408 Request Timeout.
	 *
	 * [RFC7231, Section 6.5.7]
	 */
	const REQUEST_TIMEOUT = 408;

	/**
	 * HTTP status code 409 Conflict.
	 *
	 * [RFC7231, Section 6.5.8]
	 */
	const CONFLICT = 409;

	/**
	 * HTTP status code 410 Gone.
	 *
	 * [RFC7231, Section 6.5.9]
	 */
	const GONE = 410;

	/**
	 * HTTP status code 411 Length Required.
	 *
	 * [RFC7231, Section 6.5.10]
	 */
	const LENGTH_REQUIRED = 411;

	/**
	 * HTTP status code 412 Precondition Failed.
	 *
	 * [RFC7232, Section 4.2][RFC8144, Section 3.2]
	 */
	const PRECONDITION_FAILED = 412;

	/**
	 * HTTP status code 413 Payload Too Large.
	 *
	 * [RFC7231, Section 6.5.11]
	 */
	const PAYLOAD_TOO_LARGE = 413;

	/**
	 * HTTP status code 414 URI Too Long.
	 *
	 * [RFC7231, Section 6.5.12]
	 */
	const URI_TOO_LONG = 414;

	/**
	 * HTTP status code 415 Unsupported Media Type.
	 *
	 * [RFC7231, Section 6.5.13][RFC7694, Section 3]
	 */
	const UNSUPPORTED_MEDIA_TYPE = 415;

	/**
	 * HTTP status code 416 Range Not Satisfiable.
	 *
	 * [RFC7233, Section 4.4]
	 */
	const RANGE_NOT_SATISFIABLE = 416;

	/**
	 * HTTP status code 417 Expectation Failed.
	 *
	 * [RFC7231, Section 6.5.14]
	 */
	const EXPECTATION_FAILED = 417;

	/**
	 * HTTP status code 421 Misdirected Request.
	 *
	 * [RFC7540, Section 9.1.2]
	 */
	const MISDIRECTED_REQUEST = 421;

	/**
	 * HTTP status code 422 Unprocessable Entity.
	 *
	 * [RFC4918]
	 */
	const UNPROCESSABLE_ENTITY = 422;

	/**
	 * HTTP status code 423 Locked.
	 *
	 * [RFC4918]
	 */
	const LOCKED = 423;

	/**
	 * HTTP status code 424 Failed Dependency.
	 *
	 * [RFC4918]
	 */
	const FAILED_DEPENDENCY = 424;

	/**
	 * HTTP status code 425 Too Early.
	 *
	 * [RFC8470]
	 */
	const TOO_EARLY = 425;

	/**
	 * HTTP status code 426 Upgrade Required.
	 *
	 * [RFC7231, Section 6.5.15]
	 */
	const UPGRADE_REQUIRED = 426;

	/**
	 * HTTP status code 509 Unassigned.
	 */
	const UNASSIGNED = 509;

	/**
	 * HTTP status code 428 Precondition Required.
	 *
	 * [RFC6585]
	 */
	const PRECONDITION_REQUIRED = 428;

	/**
	 * HTTP status code 429 Too Many Requests.
	 *
	 * [RFC6585]
	 */
	const TOO_MANY_REQUESTS = 429;

	/**
	 * HTTP status code 431 Request Header Fields Too Large.
	 *
	 * [RFC6585]
	 */
	const REQUEST_HEADER_FIELDS_TOO_LARGE = 431;

	/**
	 * HTTP status code 451 Unavailable For Legal Reasons.
	 *
	 * [RFC7725]
	 */
	const UNAVAILABLE_FOR_LEGAL_REASONS = 451;

	/**
	 * HTTP status code 500 Internal Server Error.
	 *
	 * [RFC7231, Section 6.6.1]
	 */
	const INTERNAL_SERVER_ERROR = 500;

	/**
	 * HTTP status code 501 Not Implemented.
	 *
	 * [RFC7231, Section 6.6.2]
	 */
	const NOT_IMPLEMENTED = 501;

	/**
	 * HTTP status code 502 Bad Gateway.
	 *
	 * [RFC7231, Section 6.6.3]
	 */
	const BAD_GATEWAY = 502;

	/**
	 * HTTP status code 503 Service Unavailable.
	 *
	 * [RFC7231, Section 6.6.4]
	 */
	const SERVICE_UNAVAILABLE = 503;

	/**
	 * HTTP status code 504 Gateway Timeout.
	 *
	 * [RFC7231, Section 6.6.5]
	 */
	const GATEWAY_TIMEOUT = 504;

	/**
	 * HTTP status code 505 HTTP Version Not Supported.
	 *
	 * [RFC7231, Section 6.6.6]
	 */
	const HTTP_VERSION_NOT_SUPPORTED = 505;

	/**
	 * HTTP status code 506 Variant Also Negotiates.
	 *
	 * [RFC2295]
	 */
	const VARIANT_ALSO_NEGOTIATES = 506;

	/**
	 * HTTP status code 507 Insufficient Storage.
	 *
	 * [RFC4918]
	 */
	const INSUFFICIENT_STORAGE = 507;

	/**
	 * HTTP status code 508 Loop Detected.
	 *
	 * [RFC5842]
	 */
	const LOOP_DETECTED = 508;

	/**
	 * HTTP status code 510 Not Extended.
	 *
	 * [RFC2774]
	 */
	const NOT_EXTENDED = 510;

	/**
	 * HTTP status code 511 Network Authentication Required.
	 *
	 * [RFC6585]
	 */
	const NETWORK_AUTHENTICATION_REQUIRED = 511;

	public static function getStatusText($code)
	{
		static $statusCodes = [
			100 => 'Continue',
			101 => 'Switching Protocols',
			102 => 'Processing',
			103 => 'Early Hints',
			200 => 'OK',
			201 => 'Created',
			202 => 'Accepted',
			203 => 'Non-Authoritative Information',
			204 => 'No Content',
			205 => 'Reset Content',
			206 => 'Partial Content',
			207 => 'Multi-Status',
			208 => 'Already Reported',
			226 => 'IM Used',
			300 => 'Multiple Choices',
			301 => 'Moved Permanently',
			302 => 'Found',
			303 => 'See Other',
			304 => 'Not Modified',
			305 => 'Use Proxy',
			306 => '(Unused)',
			307 => 'Temporary Redirect',
			308 => 'Permanent Redirect',
			400 => 'Bad Request',
			401 => 'Unauthorized',
			402 => 'Payment Required',
			403 => 'Forbidden',
			404 => 'Not Found',
			405 => 'Method Not Allowed',
			406 => 'Not Acceptable',
			407 => 'Proxy Authentication Required',
			408 => 'Request Timeout',
			409 => 'Conflict',
			410 => 'Gone',
			411 => 'Length Required',
			412 => 'Precondition Failed',
			413 => 'Payload Too Large',
			414 => 'URI Too Long',
			415 => 'Unsupported Media Type',
			416 => 'Range Not Satisfiable',
			417 => 'Expectation Failed',
			421 => 'Misdirected Request',
			422 => 'Unprocessable Entity',
			423 => 'Locked',
			424 => 'Failed Dependency',
			425 => 'Too Early',
			426 => 'Upgrade Required',
			427 => 'Unassigned',
			428 => 'Precondition Required',
			429 => 'Too Many Requests',
			430 => 'Unassigned',
			431 => 'Request Header Fields Too Large',
			451 => 'Unavailable For Legal Reasons',
			500 => 'Internal Server Error',
			501 => 'Not Implemented',
			502 => 'Bad Gateway',
			503 => 'Service Unavailable',
			504 => 'Gateway Timeout',
			505 => 'HTTP Version Not Supported',
			506 => 'Variant Also Negotiates',
			507 => 'Insufficient Storage',
			508 => 'Loop Detected',
			509 => 'Unassigned',
			510 => 'Not Extended',
			511 => 'Network Authentication Required',
		];
		return Container::keyValue ($statusCodes, $code, '');
	}
}
